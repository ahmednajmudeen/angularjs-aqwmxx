!function(e){"use strict";angular.module("UCLocale",[]).service("UCLocaleService",["$q","$http","tmhDynamicLocale",function(n,a,t){var r={debug:!1,phrases:null,path:null,setPath:function(e){r.path=e},getPath:function(e){return r.path?r.path:"i18n/locales/"},loadLocale:function(o){var a=n.defer();return r.loadPhrases(o).then(function(e){t.set(o).then(function(e){console.log("Successfully loaded ngLocale: "+e.id),a.resolve("Phrases and ngLocale loaded and installed.")},function(e){if(console.log("Locale set failed for "+o),"en-us"===o||"en"===o)a.resolve("Phrases loaded, ngLocale not loaded and installed.");else{var l=o.split("-");angular.isArray(l)&&1<l.length?(o=l[0],console.log("Attempt to install backup locale: "+o),t.set(o).then(function(e){console.log("Successfully loaded ngLocale: "+e.id),a.resolve("Phrases and ngLocale loaded and installed.")},function(e){console.log("Failed to load ngLocale: "+o),console.log("Attempt to install en-us locale"),t.set("en-us").then(function(e){console.log("Successfully loaded ngLocale: "+e.id),a.resolve("Phrases and ngLocale loaded and installed.")},function(e){a.resolve("Phrases loaded, ngLocale for en-us, not loaded and installed.")})})):(console.log("Attempt to install en-us locale"),t.set("en-us").then(function(e){console.log("Successfully loaded ngLocale: "+e.id),a.resolve("Phrases and ngLocale loaded and installed.")},function(e){a.resolve("Phrases loaded, ngLocale for en-us, not loaded and installed.")}))}})},function(e){console.log("loadLocale: Failed to load locale phrase file for "+o),a.reject("Fatal error, could not load a phrase file.")}),a.promise},getUSEnglishLocaleFile:function(e){var l=n.defer();return r.getLocaleFile("en-us").then(function(e){l.resolve(locale+" loaded.")},function(e){l.reject("Unable to download en-us as failsafe locale.")}),l.promise},getLocaleFile:function(l){var o=n.defer(),e=r.getPath()+l.toLowerCase()+".json";return console.log("getLocaleFile: load phrases for "+l+", url="+e),a.get(e).then(function(e){e.data&&angular.isObject(e.data)?(r.phrases=e.data,o.resolve(l+" loaded.")):(console.log("Locale phrases data is not an array, structure is invalid "),o.reject("InvalidFormat"))},function(e){console.error("getLocaleFile",e),o.reject("File Load Error")}),o.promise},loadPhrases:function(o){var a=n.defer();if(console.log("loadPhrases: "+o),o)return r.getLocaleFile(o).then(function(e){a.resolve(o+" loaded.")},function(e){var l=o.split("-");angular.isArray(l)&&1<l.length?(console.log("Attempt to load default language locale: "+l[0]),r.getLocaleFile(l[0]).then(function(e){a.resolve(l[0]+" loaded.")},function(e){"en-us"===o.toLowerCase()?a.reject("Unable to download en-us as failsafe locale."):r.getLocaleFile("en-us").then(function(e){a.resolve(o+" loaded.")},function(e){a.reject("Unable to download en-us as failsafe locale.")})})):r.getLocaleFile("en-us").then(function(e){a.resolve("en-us locale phrase file loaded.")},function(e){a.reject("Unable to download en-us as failsafe locale.")})}),a.promise;a.resolve("locale is required.")},getPhrase:function(e,l){if(angular.isObject(r.phrases)){var o=r.phrases[e];if(o){if(l){angular.isArray(l)||(l=[l]);for(var a=0;a<l.length;a++){var n=new RegExp("%"+(a+1),"g");o=o.replace(n,l[a])}}if(r.debug){var t=o.split(" "),s=[];return angular.forEach(t,function(e){var l=Math.floor(1.25*e.length);s.push(Array(l+1).join("M"))}),s.join(" ")}return o}return"<<"+e+">>"}},phraseExists:function(e){if(angular.isObject(r.phrases))return r.phrases[e]}};return r}])}(window);